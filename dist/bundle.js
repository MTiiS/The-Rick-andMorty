(()=>{"use strict";var n={740:(n,t,e)=>{e.d(t,{Z:()=>u});var o=e(15),r=e.n(o),a=e(645),i=e.n(a),c=e(667),A=e.n(c),l=new URL(e(978),e.b),s=i()(r()),d=A()(l);s.push([n.id,'@font-face {\n    font-family: "OtomanopeeOne-Regular";\n\n    src: url('+d+') format("truetype");\n    font-style: normal;\n    font-weight: normal;\n}\n\nhtml, body {\n    text-align: center;\n    height: 100%;\n    font-family: "OtomanopeeOne-Regular";\n    font-size: 14px;\n    margin: 0px;\n    background: #f9f9fb;\n    color: #6c757d;\n}\n\n.header {\n    background: #494d55;\n    box-sizing: border-box;\n    color: rgba(255, 255, 255, 0.85);\n    height: 70px;\n    position: fixed;\n    width: 100%;\n}\n\n.header__title {\n    margin-top: 10px;\n}\n\n.main {\n    margin: 0 auto;\n    min-height: calc(100% - 106px);\n    max-width: 90%;\n    padding-top: 70px;\n    font-size: 14px;\n}\n\n.cards {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n\n.card {\n    width: 450px;\n    height: 220px;\n    display: flex;\n    overflow: hidden;\n    background: rgb(60, 62, 68);\n    border-radius: 0.5rem;\n    margin: 0.75rem;\n    border: 1px solid black;\n}\n\n.card__img {\n    width: 220px;\n    height: 220px;\n}\n\n.card__content {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0px;\n    text-align: left;\n    justify-content: space-evenly;\n    padding-left: 10px;\n}\n\n.card__content-item {\n    margin: 0px;\n}\n\n.card__content-item_highlights {\n    color: #eeeefa;\n\n}\n\n.card__link {\n    color: rgba(255, 255, 255, 0.65);\n    text-decoration: none;\n}\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0,0,0,0.8);\n}\n\n.pagination__buttons {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 5px;\n}\n\n.pagination__buttons :hover:not(.pagination__button_active) {\n    background-color: #ddd;\n}\n\n.pagination__button{\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n}\n\n.pagination__button_active {\n    background-color: #494d55;\n    color: white;\n}\n\n.footer {\n    background: #343a40;\n    padding: 5px;\n    color: rgba(255, 255, 255, 0.6);\n    font-size: 11px;\n}\n\n\n',"",{version:3,sources:["webpack://./src/css/styles.css"],names:[],mappings:"AAAA;IACI,oCAAoC;;IAEpC,+DAAiE;IACjE,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,oCAAoC;IACpC,eAAe;IACf,WAAW;IACX,mBAAmB;IACnB,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,gCAAgC;IAChC,YAAY;IACZ,eAAe;IACf,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,8BAA8B;IAC9B,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,gBAAgB;IAChB,2BAA2B;IAC3B,qBAAqB;IACrB,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,cAAc;;AAElB;;AAEA;IACI,gCAAgC;IAChC,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,qBAAqB;AACzB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,+BAA+B;IAC/B,eAAe;AACnB",sourcesContent:['@font-face {\n    font-family: "OtomanopeeOne-Regular";\n\n    src: url("../fonts/OtomanopeeOne-Regular.ttf") format("truetype");\n    font-style: normal;\n    font-weight: normal;\n}\n\nhtml, body {\n    text-align: center;\n    height: 100%;\n    font-family: "OtomanopeeOne-Regular";\n    font-size: 14px;\n    margin: 0px;\n    background: #f9f9fb;\n    color: #6c757d;\n}\n\n.header {\n    background: #494d55;\n    box-sizing: border-box;\n    color: rgba(255, 255, 255, 0.85);\n    height: 70px;\n    position: fixed;\n    width: 100%;\n}\n\n.header__title {\n    margin-top: 10px;\n}\n\n.main {\n    margin: 0 auto;\n    min-height: calc(100% - 106px);\n    max-width: 90%;\n    padding-top: 70px;\n    font-size: 14px;\n}\n\n.cards {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n\n.card {\n    width: 450px;\n    height: 220px;\n    display: flex;\n    overflow: hidden;\n    background: rgb(60, 62, 68);\n    border-radius: 0.5rem;\n    margin: 0.75rem;\n    border: 1px solid black;\n}\n\n.card__img {\n    width: 220px;\n    height: 220px;\n}\n\n.card__content {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0px;\n    text-align: left;\n    justify-content: space-evenly;\n    padding-left: 10px;\n}\n\n.card__content-item {\n    margin: 0px;\n}\n\n.card__content-item_highlights {\n    color: #eeeefa;\n\n}\n\n.card__link {\n    color: rgba(255, 255, 255, 0.65);\n    text-decoration: none;\n}\n\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0,0,0,0.8);\n}\n\n.pagination__buttons {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 5px;\n}\n\n.pagination__buttons :hover:not(.pagination__button_active) {\n    background-color: #ddd;\n}\n\n.pagination__button{\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n}\n\n.pagination__button_active {\n    background-color: #494d55;\n    color: white;\n}\n\n.footer {\n    background: #343a40;\n    padding: 5px;\n    color: rgba(255, 255, 255, 0.6);\n    font-size: 11px;\n}\n\n\n'],sourceRoot:""}]);const u=s},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e=n(t);return t[2]?"@media ".concat(t[2]," {").concat(e,"}"):e})).join("")},t.i=function(n,e,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&r[A[0]]||(e&&(A[2]?A[2]="".concat(e," and ").concat(A[2]):A[2]=e),t.push(A))}},t}},15:n=>{function t(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=new Array(t);e<t;e++)o[e]=n[e];return o}n.exports=function(n){var e,o,r=(o=4,function(n){if(Array.isArray(n))return n}(e=n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,r,a=[],i=!0,c=!1;try{for(e=e.call(n);!(i=(o=e.next()).done)&&(a.push(o.value),!t||a.length!==t);i=!0);}catch(n){c=!0,r=n}finally{try{i||null==e.return||e.return()}finally{if(c)throw r}}return a}}(e,o)||function(n,e){if(n){if("string"==typeof n)return t(n,e);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(n,e):void 0}}(e,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],i=r[3];if(!i)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),l="/*# ".concat(A," */"),s=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(s).concat([l]).join("\n")}return[a].join("\n")}},667:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],l=o.base?A[0]+o.base:A[0],s=a[l]||0,d="".concat(l," ").concat(s);a[l]=s+1;var u=e(d),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==u?(t[u].references++,t[u].updater(p)):t.push({identifier:d,updater:r(p,o),references:1}),i.push(d)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);t[c].references--}for(var A=o(n,r),l=0;l<a.length;l++){var s=e(a[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=A}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o=e.css,r=e.media,a=e.sourceMap;r?n.setAttribute("media",r):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},978:(n,t,e)=>{n.exports=e.p+"beeba6bf9070086f1183.ttf"}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),a=e(569),i=e.n(a),c=e(565),A=e.n(c),l=e(216),s=e.n(l),d=e(589),u=e.n(d),p=e(740),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=s(),t()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const g={TOTAL_PAGES:34,TOTAL_PAGIN_BUTTONS:7,OFFSET_STEP:3,PREV_BUTTON:{id:"prev",content:"<<"},NEXT_BUTTON:{id:"next",content:">>"}};function m(n){return n?g[n]:g}let h=1;function C(){return h}function b(n){h=n}let B=[],I=null;function _(n){B=n}function x(){return B}function y(n,t,e){this.id=n,this.text=t,this.isActive=e}function v(){let n=m("PREV_BUTTON"),t=m("NEXT_BUTTON"),e=m("TOTAL_PAGES"),o=m("TOTAL_PAGIN_BUTTONS"),r=m("OFFSET_STEP"),a=C(),i=a,c=[];a<5?(i=1,r=0):a>=e-r&&(i=e-o,r=0);let A=i+o-r;for(let n=i-r;n<A;n++){let t=n===a;c.push(new y(n,n,t))}c.unshift(new y(n.id,n.content,!1)),c.push(new y(t.id,t.content,!1)),_(c)}function w(){let n=x();const t=document.querySelector(".pagination__buttons");t.innerHTML="";for(let e of n)t.append(T(e))}function T(n){let t=document.createElement("li");return t.dataset.page=n.id,t.textContent=n.text,t.classList.add("pagination__button"),!0===n.isActive&&t.classList.add("pagination__button_active"),t}document.querySelector(".pagination__buttons").addEventListener("click",(function(n){!function(n){let t=m("PREV_BUTTON"),e=m("NEXT_BUTTON"),o=m("TOTAL_PAGES"),r=C();switch(n){case t.id:r>1&&r--;break;case e.id:r<o&&r++;break;default:r=Number(n)}b(r)}(n.target.dataset.page),v(),w(),I(),window.scrollTo(0,0)}));let E={};function k(){!function(n){(function(n){return fetch("https://rickandmortyapi.com/api/character/?page="+n).then((n=>n.json())).then((n=>E=n.results.map((n=>({id:n.id,image:n.image,name:n.name,status:n.status,gender:n.gender,location:n.location.name,episode:n.episode[0]}))))).catch((n=>console.log("error",n)))})(n).then((n=>{!function(n){let t=document.querySelector(".cards");t.innerHTML="";for(let e of n){let n=O("div","card");n.dataset.id=e.id;let o=O("img","card__img",e.image);o.src=e.image;let r=O("div","card__content"),a=O("section"),i=O("h1",["card__content-item","card__content-item_highlights"],e.name),c=O("ul","card__content-item"),A=O("li",null,[e.status,"-",e.gender]);c.append(A);let l=O("section"),s=O("h4",["card__content-item","card__content-item_highlights"],"Last known location:"),d=O("p",null,e.location),u=O("section","modal__openButton"),p=O("a","card__link","read more...");p.href="#",a.append(i,c),l.append(s,d),u.append(p),r.append(a,l,u),n.append(o,r),t.append(n)}}(n)}))}(C())}function O(n,t,e){let o=document.createElement(n);return"string"==typeof t?o.classList.add(t):Array.isArray(t)&&t.forEach((n=>{o.classList.add(n)})),"string"==typeof e?o.textContent=e:Array.isArray(e)&&(o.textContent=e.join("")),o}document.addEventListener("DOMContentLoaded",(function(n){var t;k(),t={onPaginate:function(){k()}},v(),w(),I=t.onPaginate}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,